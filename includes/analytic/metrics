<h2 id='analytic-metrics'>Analytic metrics</h2>
<p>Monitor the four key dimensions of video QoS: playback failures, startup time, rebuffering, and video quality. These 15 metrics help you track playback performance, so your team can know exactly what’s going on.</p>

<table><thead>
<tr>
<th>Metric</th>
<th>Unit</th>
<th>Slug (use for API)</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>Playback Failure Percentage</td>
<td>Percentage (%)</td>
<td>playback_failure_percentage</td>
<td>The Playback Failure Percentage metric gives the percentage of video views that failed to play due to an error.</td>
</tr>
<tr>
<td>Video Startup Time</td>
<td>Millisecond (ms)</td>
<td>video_startup_time</td>
<td>Video Startup Time measures the time that the viewer waits for the video to play after the page is loaded and the player is ready. It specifically measures from when the player has been instructed to play the video, either directly by the user or via autoplay, to when the first frame of video is showing and the playhead is progressing. In the case that the player is configured with a pre-roll ad, Video Startup Time is the time until the first first frame of the pre-roll ad is displayed.</td>
</tr>
<tr>
<td>Player Startup Time</td>
<td>Millisecond (ms)</td>
<td>player_startup_time</td>
<td>Player Startup Time measures the time from when the player is first initialized in the page to when it is ready to receive further instructions.</td>
</tr>
<tr>
<td>Page Load Time</td>
<td>Millisecond (ms)</td>
<td>page_load_time</td>
<td>Page load time measures the time from the initial user request for a page to the time when the video player is first initialized. Use this metric to understand the impact of new page resources (JavaScript files, CSS, etc.) on the viewer wait time. This can also be used to compare video players, and the size and loading speed of their files impacts the wait time.</td>
</tr>
<tr>
<td>Aggregate Startup Time</td>
<td>Millisecond (ms)</td>
<td>aggregate_startup_time</td>
<td>Aggregate Startup Time combines Page Load Time, Player Startup Time, and Video Startup Time to show the total time a viewer waits for a video to play after requesting to watch the video on the previous screen or page.</td>
</tr>
<tr>
<td>Seek Latency</td>
<td>Millisecond (ms)</td>
<td>seek_latency</td>
<td>The Seek Latency metric measures the average amount of time that viewers wait for the video to start playing again after seeking to a new time. Seeking is any time the player is asked to jump backward or forward to a new time in the video, outside of normal playback. Aside from the viewer clicking on the progress bar, seeking can also happen programmatically, for example when jumping ahead to resume where the viewer previously stopped watching.</td>
</tr>
<tr>
<td>Exist before start</td>
<td>Percentage (%)</td>
<td>exits_before_video_start</td>
<td>Exist before start counts the number of video views where the viewer clicked play (or the player began to autoplay) but the video never began to play back (Video Startup Time was never recorded)</td>
</tr>
<tr>
<td>Rebuffer Percentage</td>
<td>Percentage (%)</td>
<td>rebuffer_percentage</td>
<td>Rebuffer Percentage measures the volume of rebuffering that is occurring across the platform. Total Rebuffer Duration is the sum of the time viewers spend rebuffering on the platform or the given set of video views. Total Watch Time is the sum of all time viewers spend watching video, inclusive of rebuffering time. The Total Rebuffer Percentage then measures the total rebuffer duration as a percentage of total watch time.</td>
</tr>
<tr>
<td>Rebuffer Frequency</td>
<td>Number / Minute</td>
<td>rebuffer_frequency</td>
<td>Rebuffer Frequency measures how often rebuffering events happen. It’s important to track this number because it can reveal issues of video stuttering, where the player is being too aggressive when restarting playback and has to frequently stop to rebuffer.</td>
</tr>
<tr>
<td>Rebuffer Duration</td>
<td>Millisecond (ms)</td>
<td>rebuffer_duration</td>
<td>Rebuffer Duration is the amount of time in seconds that viewers wait for rebuffering per video view.</td>
</tr>
<tr>
<td>Rebuffer Count</td>
<td>Number</td>
<td>rebuffer_count</td>
<td>Rebuffer Count shows the number of rebuffering events that happen during video views.</td>
</tr>
<tr>
<td>Upscale Percentage</td>
<td>Percentage (%)</td>
<td>upscale_percentage</td>
<td>Upscaling is when the video player has to increase the size of the video to fill the player’s display. For example, if the video source is 320x240 and the player size 640x480, the player will stretch the video to fill the player dimensions. In that process the quality of the video degrades. Upscale Percentage is measured as the change in one dimension, specifically the dimension that fits the player first when upscaling. In the 320x240 to 640x480 example, the Upscale Percentage would be 100%, calculated as (640-320) / 320.</td>
</tr>
<tr>
<td>Downscale Percentage</td>
<td>Percentage (%)</td>
<td>downscale_percentage</td>
<td>Downscaling is the inverse of upscaling, measuring when the video source is too big for the player and has to be reduced in size to fit the display. In the process of shrinking the video pixels are thrown out and essentially wasted. While this does not mean a reduction in video quality it does mean wasted bandwidth for you and the viewer, and significant occurrences of downscaling should be addressed.</td>
</tr>
<tr>
<td>Max Upscale Percentage</td>
<td>Percentage (%)</td>
<td>max_upscale_percentage</td>
<td>While Upscale Percentage helps understand the volume of upscaling that’s occurring on your platform, the Max Upscale Percentage can help reveal points of significant upscaling, even if they don’t last the full video. It can also be more clear which video rendition may be the culprit as the percentage will exactly match the difference between a rendition and the player dimensions.</td>
</tr>
<tr>
<td>Max Downscale Percentage</td>
<td>Percentage (%)</td>
<td>max_downscale_percentage</td>
<td>While Downscale Percentage helps understand the volume of downscaling that’s occurring on your platform, the Max Downscale Percentage can help reveal points of significant downscaling, even if they don’t last the full video. It can also be more clear which video rendition may be the culprit as the percentage will exactly match the difference between a rendition and the player dimensions.</td>
</tr>
</tbody></table>
